/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/portuguese.dtsi"

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <220>; };

&mt { quick_tap_ms = <220>; };

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE        &kp Q         &kp W          &kp E                   &kp R  &kp T  &kp Y                  &kp U          &kp I         &kp O       &kp P          &kp LEFT_BRACKET
&kp TAB           &kp A         &kp S          &kp D                   &kp F  &kp G  &kp H                  &kp J          &kp K         &kp L       &kp SEMICOLON  &kp NON_US_BACKSLASH
&kp LEFT_CONTROL  &kp Z         &kp X          &kp C                   &kp V  &kp B  &kp N                  &kp M          &kp COMMA     &kp DOT     &kp SLASH      &kp N1
&kp N1            &kp LEFT_WIN  &kp BACKSPACE  &mt LEFT_CONTROL SPACE  &mo 1  &mo 2  &mt RIGHT_SHIFT ENTER  &kp RIGHT_ALT  &kp NUMBER_2  &kp DELETE
            >;
        };

        lower_layer {
            bindings = <
&mt LWIN F1     &kp F2    &kp F3  &kp F4    &kp F5      &kp F6       &kp F7     &kp F8    &kp F9    &kp F10   &kp F11   &mt RWIN F12
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RALT UNDER
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3    &kp N4      &kp N5       &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &mt RALT MINUS
&lt 3 TAB       &trans    &trans  &trans    &trans      &lt 3 DEL    &none      &none     &none     &none
            >;
        };

        raise_layer {
            bindings = <
&mt LEFT_GUI KP_NUMLOCK  &kp KP_SLASH     &none      &kp UP     &kp HOME   &kp PAGE_UP    &none  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &none        &mt RIGHT_GUI CAPS
&mt LCTRL KP_PLUS        &kp KP_MULTIPLY  &kp LEFT   &kp DOWN   &kp RIGHT  &kp PAGE_DOWN  &none  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS    &mt RCTRL K_MENU
&mt LALT EQUAL           &kp KP_NUMBER_0  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp END        &none  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp DOT      &kp RALT
&trans                   &trans           &lt 3 RET  &lt 3 ESC  &trans     &trans         &none  &kp KP_NUMBER_0  &none            &none            &bootloader  &none
            >;
        };
    };
};
